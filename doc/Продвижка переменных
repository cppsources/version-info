ПРОДВИЖКА ПЕРЕМЕННЫХ

Проект состоит из нескольких подпроектов и в нем определена собственная
переменная, например myVariable. Главный pro-файл имеет структуру:

    TEMPLATE = SUBDIRS

    SUBDIRS += \
        src

    myVariable = value

1 Для получения значения переменной myVariable в pro/pri файлах любого
подпроекта, необходимо записать myVariable = value в .qmake.cache:

    exists($$OUT_PWD/.qmake.cache) { # удаление .qmake.cache при каждом qmake
        unix: system(rm -rf $$OUT_PWD/.qmake.cache)
        win32: system(DEL /Q /F $$OUT_PWD/.qmake.cache) # TODO: Протестировать
    }

    !infile($$OUT_PWD/.qmake.cache, myVariable) { # собственная переменная
        system("echo myVariable = value >> $$OUT_PWD/.qmake.cache")
    }

    А потом в pro/pri файле прочитать ее значение: message($$myVariable)

2.1 Для получения значения переменной myVariable в файлах исходного
кода (*.h, *.c, *.cpp) любого подпроекта, необходимо ее продвинуть из pro-файла,
главного для этого подпроекта, в файлы исходного кода этого подпроекта:

    DEFINES += \
        myVariable=value

    А потом, в файлах исходного кода, прочитать ее значение:
    qDebug() << myVariable

2.2 Если, кроме получения значения переменной myVariable (см. п. 2.1), требуется
ее использовать в командах препроцессора (например, для условной компиляции), то
необходимо ее продвинуть из pro-файла, главного для этого подпроекта, в файлы
исходного кода этого подпроекта, следующим образом:

    DEFINES += \
        value myVariable=value

    А потом, в файлах исходного кода, можно как прочитать ее значение:
    qDebug() << myVariable
    
    так и использовать для условной компиляции:
    #if myVariable == value
        qDebug() << 1
    #else 
        qDebug() << 2
    #endif

ВОПРОС
Может ли значение переменной myVariable быть числовым, или только текстовым?
